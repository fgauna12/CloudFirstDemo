# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  buildConfiguration: 'Release'
  AzureSubscriptionConnectionName: 'Nebbia - Partner Network(1979771a-9163-4750-8947-e6dbe596a8d7)'
  AzureSubscriptionName: '1979771a-9163-4750-8947-e6dbe596a8d7'

stages:
- stage: build
  displayName: Build
  jobs:
    - job: job_build
      displayName: Build
      pool:
        vmImage: 'ubuntu-latest'
      steps: 
      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
          projects: '**/*.csproj'
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          publishWebProjects: true 
          arguments: -o $(Build.ArtifactStagingDirectory)/api
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
- stage: publish
  displayName: Publish
  variables:
    - name: Environment
      value: prod
    - name: ResourceGroupName
      value: rg-sampleapp-$(Environment)-001
    - name: WebAppName
      value: azapp-sampleapi-$(Environment)
  jobs:
    - job: job_publish_api
      displayName: Publish API
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - download: current
        artifact: drop
      - script: |
          echo 'pretend publishing'
      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          deploymentScope: 'Resource Group'
          ConnectedServiceName: $(AzureSubscriptionConnectionName)
          subscriptionName: $(AzureSubscriptionName)
          action: 'Create Or Update Resource Group'
          resourceGroupName: $(ResourceGroupName)
          location: 'East US'
          templateLocation: 'Linked artifact'
          csmFile: './arm/arm.json'
          overrideParameters: '-webAppName $(WebAppName)'
          deploymentMode: 'Incremental'
      - task: AzureWebApp@1
        inputs:
          azureSubscription: $(AzureSubscriptionConnectionName)
          appType: 'webApp'
          appName: $(WebAppName)
          package: '$(Pipeline.Workspace)/drop/api/**/*.zip'
          deploymentMethod: 'auto'
    - job: job_publish_worker
      displayName: Publish Worker
      pool: 
        vmImage: 'ubuntu-latest'
      steps: 
        - script: |
            sudo npm install -g @cloudflare/wrangler
        - script: |
            wrangler publish
          workingDirectory: $(Build.SourcesDirectory)/src/cloud-worker